syntax = "proto2";

import "ent/comum.proto";
import "ent/acoes.proto";

package ent;
option java_package = "com.matferib.Tabuleiro.ent";

message Preco {
  optional int32 po = 1;
}

enum TipoArmadura {
  TA_LEVE = 0;
  TA_MEDIO = 1;
  TA_PESADO = 2;
}

message RacaProto {
  optional string id = 1;
  optional string nome = 2;
  optional string descricao = 3;
  optional Atributos bonus_atributos = 4;
  repeated InfoPericia bonus_pericias = 9;
  optional TamanhoEntidade tamanho = 5 [default=TM_MEDIO];
  optional DadosDefesa dados_defesa = 6;
  optional TipoDnD tipo = 7;
  optional SubTipoDnD sub_tipo = 8;
  repeated DadosAtaque dados_ataque = 10;
  optional DadosAtaqueGlobal dados_ataque_global = 15;
  optional Movimento movimento = 11;
  optional TipoVisao tipo_visao = 12;
  optional int32 alcance_visao_m = 13;
  // Para raças estaveis como anões.
  optional bool estabilidade = 14;
  repeated TalentoProto talentos_com_complemento_automaticos = 16;
  repeated string familiaridade_com_arma = 17;
}

message ArmaduraOuEscudoProto {
  optional string nome = 1;
  optional Preco preco = 2;
  optional int32 bonus = 3;
  optional int32 max_bonus_destreza = 4 [default = 100];
  optional TipoArmadura tipo = 5;
  optional int32 falha_arcana = 6;  // de 0 a 100.
  optional bool reduz_movimento = 7;
  optional int32 peso_kg = 8;
  // Valor eh positivo.
  optional int32 penalidade_armadura = 9;
  // Identificador unico, sem caracteres especiais para mapeamento em tabelas.
  optional string id = 10;
}

// Para efeitos de perícia, a arma pode ter apenas uma categoria.
enum CategoriaPericia {
  CATPER_SIMPLES = 0;
  CATPER_COMUM   = 1;
  CATPER_EXOTICA = 2;
}

// Atencao: os valores aqui sao usados em mapas do dado de ataque global. Nao mudar.
// Uma arma pode ter varias categorias.
enum CategoriaArma {
  // arma corpo a corpo.
  CAT_CAC        = 0;
  // Ataque a distancia.
  CAT_DISTANCIA  = 1;
  // Arma leve.
  CAT_LEVE       = 2;
  // Arma de arremesso (implica distancia).
  CAT_ARREMESSO = 5;
  // Arma requer duas maos.
  CAT_DUAS_MAOS = 6;
  // Arcos tem tratamento especial (implica distancia).
  CAT_ARCO      = 7;
  // Arma é dupla. Implica duas maos.
  CAT_ARMA_DUPLA = 8;
  // A arma é um projétil de área (água benta, ácido, fogo alquimico).
  CAT_PROJETIL_AREA = 9;
  // O proto representa uma arma (e não um feitiço, por exemplo).
  CAT_ARMA = 10;
  // O proto representa uma arma natural.
  CAT_ARMA_NATURAL = 11;
}

enum TipoDano {
  TD_CORTANTE = 0;
  TD_CONCUSSAO = 1;
  TD_PERFURANTE = 2;
  TD_OUTRO = 3;
}

// O medio vem de tabela e os outros gerados automaticamente.
message StringPorTamanho {
  optional string minusculo = 8;
  optional string diminuto = 9;
  optional string miudo = 10;
  optional string pequeno = 2;
  optional string medio = 1;
  optional string grande = 3;
  optional string enorme = 5;
  optional string imenso = 6;
  optional string colossal = 7;
  // Dano nao varia por tamanho.
  optional string invariavel = 4;
}

enum TipoCarregamento {
  TC_LIVRE = 0;
  TC_MOVIMENTO = 1;
  TC_PADRAO = 3;
  TC_RODADA_COMPLETA = 2;
}

enum TipoComponenteMaterial {
  COMP_NENHUM = 0;
  COMP_FOCO = 1;
  COMP_MATERIAL = 2;
}

message InfoComponente {
  optional TipoComponenteMaterial tipo = 1;
  optional Moedas custo = 2;
  optional string descricao = 3;
  optional bool verbal = 4 [default=true];
  optional bool somatico = 5 [default=true];
  optional bool material = 6 [default=true];
}

// Proximo id: 42.
message ArmaProto {
  optional string id = 1;
  optional string id_arma_base = 39;
  optional string nome = 2;
  repeated CategoriaArma categoria = 3;
  optional string preco = 4;
  optional StringPorTamanho dano = 5;
  // Presente em armas duplas.
  optional StringPorTamanho dano_secundario = 6;
  optional StringPorTamanho peso = 8;
  repeated TipoDano tipo_dano = 9;
  // Algumas armas tem dano perfurante, mas o movimento é de outro tipo.
  optional TipoDano tipo_movimento_acao = 41;
  optional int32 alcance_quadrados = 10;
  // Para armas como chicote e corrente com cravos.
  optional bool atinge_adjacentes = 17;
  optional int32 multiplicador_haste = 37 [default=2];
  enum ModificadorAlcance {
    MOD_NENHUM = 0;
    MOD_2_QUAD_NIVEL = 1;
    MOD_8_QUAD_NIVEL = 2;
    MOD_1_QUAD_CADA_2_NIVEIS = 3;
  }
  optional ModificadorAlcance modificador_alcance = 22;
  optional int32 margem_critico = 7 [default=20];
  optional int32 multiplicador_critico = 11 [default=2];
  //optional int32 margem_critico_secundario = 12 [default=20];
  reserved 12;
  optional int32 multiplicador_critico_secundario = 13 [default=2];
  // Maximo modificador de forca permitido pela arma (valido para arcos).
  optional int32 max_forca = 14;
  optional CategoriaPericia categoria_pericia = 15;
  // Indica que a arma eh de haste.
  optional bool haste = 16;
  optional bool nao_letal = 18;
  // Para projeteis de area.
  optional string dano_dispersao = 19;
  // Para outros efeitos.
  optional AcaoProto acao = 20;
  // Em caso de feitico, indica quais classes podem usa-lo e o nivel.
  message InfoClasseParaFeitico {
    // Classe que pode usar o feitico, ou id do dominio.
    optional string id = 1;
    // Para feiticos de dominio.
    optional bool dominio = 2;
    // Nivel da classe.
    optional int32 nivel = 3;
  }
  repeated InfoClasseParaFeitico info_classes = 21;

  // Se a arma for criada por um feitico. Esses modelos devem ser usados apenas para
  // criar coisas nos DadosAtaque, ja que as ações serão sobrescritas no recomputa.
  optional ModeloGenerico modelo_limite_vezes = 23;

  enum ModeloDano {
    DANO_1D6_POR_NIVEL_MAX_10D6 = 0;
    CURA_1D8_MAIS_1_POR_NIVEL_MAX_5 = 1;
    DANO_1D8_MAIS_1_POR_NIVEL_MAX_5 = 2;
    CURA_2D8_MAIS_1_POR_NIVEL_MAX_10 = 3;
    DANO_2D8_MAIS_1_POR_NIVEL_MAX_10 = 4;
    CURA_3D8_MAIS_1_POR_NIVEL_MAX_15 = 5;
    DANO_3D8_MAIS_1_POR_NIVEL_MAX_15 = 6;
    CURA_4D8_MAIS_1_POR_NIVEL_MAX_20 = 7;
    DANO_4D8_MAIS_1_POR_NIVEL_MAX_20 = 8;
    DANO_1D8_CADA_2_NIVEIS_MAX_5D8 = 9;
    DANO_1D8_POR_NIVEL_MAX_10D8 = 10;
    DANO_1D6_CADA_2_NIVEIS_MAX_5D6 = 11;
    DANO_1D8_CADA_2_NIVEIS_MAX_10D8 = 12;
    CURA_1= 13;
    DANO_1= 14;
    DANO_1D4_POR_NIVEL_MAX_5D4 = 15;
    DANO_1D6_POR_NIVEL_MAX_15D6 = 16;
    DANO_3D6_MAIS_1_POR_NIVEL = 17;
    CURA_10_POR_NIVEL_MAX_150 = 18;
    DANO_10_POR_NIVEL_MAX_150 = 19;
    DANO_1D6_POR_NIVEL_MAX_20D6 = 20;
  }
  // Se a arma for criada por feitico.
  optional ModeloDano modelo_dano = 25;

  // Arma requer carregamento.
  message Carregamento {
    optional bool requer_carregamento = 1;
    // O tipo de carregamento da arma.
    optional TipoCarregamento tipo_carregamento = 2;
    // A capacidade de carga antes de ter que carregar (besta de repeticao).
    optional int32 capacidade_carga = 3;
  }
  optional Carregamento carregamento = 24;

  // Arma possui veneno.
  optional VenenoProto veneno = 27;

  // A arma requer ataque de toque.
  optional bool ataque_toque = 26;
  // Alguns feiticos dao dano independente da salvacao (explosao sonora). Apenas os efeitos sao anulados pela salvacao.
  optional bool dano_ignora_salvacao = 28;
  optional string escola = 29;
  enum ModeloTotalDadosVida {
    TDV_NENHUM = 0;
    TDV_2D4_MAIS_NIVEL = 1;
    TDV_1D4_POR_NIVEL_MAX_20D4 = 2;
  };
  optional ModeloTotalDadosVida modelo_total_dv = 30;
  // link da arma, feitico ou o que for.
  optional string link = 32;
  optional string nome_ingles = 33;
  // Caso a arma tenha modelo 3d.
  optional string modelo_3d = 31 [deprecated=true];
  optional Modelo3d info_modelo_3d = 34;
  // Se verdadeiro, arma pode ser usada para derrubar.
  optional bool pode_derrubar = 35;
  optional int32 bonus_desarmar = 40;
  optional InfoComponente componente = 36;
  // tempo_conjuracao, casting_time;
  optional int32 tempo_execucao_rodadas = 38;
}

message TabelaArmaduraOuEscudo {
  repeated ArmaduraOuEscudoProto armaduras = 1;
  repeated ArmaduraOuEscudoProto escudos = 2;
}

message TabelaArmas {
  repeated ArmaProto armas = 1;
}

message TabelaFeiticos {
  repeated ArmaProto armas = 1;
}

message TabelaEfeitos {
  repeated EfeitoProto efeitos = 1;
}

message TabelaEfeitosModelos {
  repeated EfeitoModeloProto efeitos = 1;
}

message TabelaPocoes {
  repeated ItemMagicoProto pocoes = 1;
}

message TabelaPergaminhos {
  repeated ItemMagicoProto pergaminhos_arcanos = 1;
  repeated ItemMagicoProto pergaminhos_divinos = 2;
}

message TabelaTalentos {
  repeated TalentoProto talentos = 1;
}

message TabelaClasses {
  repeated InfoClasse info_classes = 1;
}

message TabelaPericias {
  repeated PericiaProto pericias = 1;
}

message TabelaAneis {
  repeated ItemMagicoProto aneis = 1;
}

message TabelaMantos {
  repeated ItemMagicoProto mantos = 1;
}

message TabelaBotas {
  repeated ItemMagicoProto botas = 1;
}

message TabelaMunicoes {
  repeated Municao municoes = 1;
}

message TabelaItensMundanos {
  repeated ItemMagicoProto itens = 1;
}

message TabelaBracadeiras {
  repeated ItemMagicoProto bracadeiras = 1;
}

message TabelaLuvas {
  repeated ItemMagicoProto luvas = 1;
}

message TabelaAmuletos {
  repeated ItemMagicoProto amuletos = 1;
}

message TabelaChapeus {
  repeated ItemMagicoProto chapeus = 1;
}

message TabelaVenenos {
  repeated VenenoProto venenos = 1;
}

message TabelaRacas {
  repeated RacaProto racas = 1;
}

message DominioProto {
  optional string id = 1;
  optional string nome = 2;
  optional string descricao = 3;
  repeated DadosAtaque dados_ataque = 4;
}

message TabelaDominios {
  repeated DominioProto dominios = 1;
}

// O arquivo tabelas.asciiproto eh desse tipo.
message TodasTabelas {
  optional TabelaArmaduraOuEscudo tabela_armaduras = 1;
  optional TabelaArmaduraOuEscudo tabela_escudos = 2;
  optional TabelaArmas tabela_armas = 3;
  optional TabelaEfeitos tabela_efeitos = 4;
  optional TabelaTalentos tabela_talentos = 5;
  optional TabelaPericias tabela_pericias =  6;
  optional TabelaFeiticos tabela_feiticos = 7;
  optional TabelaEfeitosModelos tabela_efeitos_modelos = 8;
  optional TabelaRacas tabela_racas = 9;
  optional TabelaPocoes tabela_pocoes = 50;
  optional TabelaPergaminhos tabela_pergaminhos = 61;
  optional TabelaClasses tabela_classes =  51;
  optional TabelaAneis tabela_aneis = 52;
  optional TabelaMantos tabela_mantos = 53;
  optional TabelaBotas tabela_botas = 54;
  optional TabelaBracadeiras tabela_bracadeiras = 55;
  optional TabelaLuvas tabela_luvas = 56;
  optional TabelaAmuletos tabela_amuletos = 58;
  optional TabelaChapeus tabela_chapeus = 59;
  optional TabelaVenenos tabela_venenos = 57;
  optional TabelaDominios tabela_dominios = 60;
  optional TabelaMunicoes tabela_municoes = 62;
  optional TabelaItensMundanos tabela_itens_mundanos = 63;
}
