syntax = "proto2";
package ent;

import "ent/comum.proto";

// Proximo id: 154, mas conferir pq ha gaps.
enum IdBotao {
  CONTROLE_ACAO = 1;
  CONTROLE_ACAO_ANTERIOR = 2;
  CONTROLE_ACAO_PROXIMA = 3;
  CONTROLE_ADICIONA_1 = 4;
  CONTROLE_ADICIONA_5 = 5;
  CONTROLE_ADICIONA_10 = 6;
  CONTROLE_CONFIRMA_DANO = 7;
  CONTROLE_APAGA_DANO = 8;
  CONTROLE_ALTERNA_CURA = 9;
  CONTROLE_DESFAZER = 10;
  CONTROLE_VOO = 11;
  CONTROLE_VISIBILIDADE = 12;
  CONTROLE_QUEDA = 13;
  CONTROLE_LUZ = 14;
  CONTROLE_RODADA = 15;
  CONTROLE_CAMERA_ISOMETRICA = 16;
  CONTROLE_CAMERA_PRESA = 17;
  CONTROLE_CAMERA_PRESA_PROXIMO = 85;
  CONTROLE_CAMERA_PRIMEIRA_PESSOA = 70;
  CONTROLE_CIMA = 18;
  CONTROLE_BAIXO = 19;
  CONTROLE_ESQUERDA = 20;
  CONTROLE_DIREITA = 21;
  CONTROLE_CIMA_VERTICAL = 22;
  CONTROLE_BAIXO_VERTICAL = 23;
  CONTROLE_CIMA_VERTICAL_TERRENO = 71;
  CONTROLE_BAIXO_VERTICAL_TERRENO = 72;
  CONTROLE_TRANSICAO = 24;
  CONTROLE_PAGINACAO_LISTA_OBJETOS_CIMA = 25;  // paginacao de lista de objetos.
  CONTROLE_PAGINACAO_LISTA_OBJETOS_BAIXO = 26;  // ditto.
  CONTROLE_PAGINACAO_ANTERIOR = 27;  // paginacao do controle virtual
  CONTROLE_PAGINACAO_PROXIMO = 28;   // ditto.
  CONTROLE_VISAO_ESCURO = 29;
  CONTROLE_REGUA = 30;
  CONTROLE_DESENHO_LIVRE = 31;
  CONTROLE_DESENHO_RETANGULO = 32;
  CONTROLE_DESENHO_CIRCULO = 33;
  CONTROLE_DESENHO_TRIANGULO = 34;
  CONTROLE_DESENHO_ESFERA = 35;
  CONTROLE_DESENHO_HEMISFERIO = 138;
  CONTROLE_DESENHO_PIRAMIDE = 36;
  CONTROLE_DESENHO_CUBO = 37;
  CONTROLE_DESENHO_CILINDRO = 38;
  CONTROLE_DESENHO_CONE = 39;
  CONTROLE_DESENHO_AGRUPAR = 40;
  CONTROLE_DESENHO_DESAGRUPAR  = 41;
  CONTROLE_MODO_REMOVER_DE_GRUPO = 139;
  CONTROLE_DESENHO_COR_VERMELHO = 42;
  CONTROLE_DESENHO_COR_VERDE = 43;
  CONTROLE_DESENHO_COR_AZUL = 44;
  CONTROLE_DESENHO_COR_AMARELO = 45;
  CONTROLE_DESENHO_COR_MAGENTA = 46;
  CONTROLE_DESENHO_COR_CIANO = 47;
  CONTROLE_DESENHO_COR_BRANCO = 48;
  CONTROLE_DESENHO_COR_PRETO = 49;
  CONTROLE_DESENHO_COR_PERSONALIZADA = 80;
  CONTROLE_COPIAR = 50;
  CONTROLE_COLAR = 51;
  CONTROLE_SALVAR = 52;
  CONTROLE_SALVAR_COMO = 53;
  CONTROLE_ABRIR = 54;
  CONTROLE_DANO_AUTOMATICO = 55;
  CONTROLE_AJUDA = 56;
  CONTROLE_MODO_ROTACAO = 57;
  CONTROLE_INTERFACE_GRAFICA = 58;
  CONTROLE_GERAR_TERRENO_ALEATORIO = 59;
  CONTROLE_GERAR_MONTANHA = 60;
  CONTROLE_MODO_TERRENO = 61;
  CONTROLE_NOP = 62;
  CONTROLE_TEXTURA_ENTIDADE = 63;
  CONTROLE_TEXTURA_ENTIDADE_PROXIMA = 64;
  CONTROLE_TEXTURA_ENTIDADE_ANTERIOR = 65;
  CONTROLE_APAGA_ENTIDADES = 66;
  CONTROLE_MODELO_ENTIDADE = 67;
  CONTROLE_MODELO_ENTIDADE_PROXIMA = 68;
  CONTROLE_MODELO_ENTIDADE_ANTERIOR = 69;
  CONTROLE_ANGULO_VISAO_MAIS = 73;
  CONTROLE_ANGULO_VISAO_MENOS = 74;
  CONTROLE_ANGULO_VISAO_ORIGINAL = 75;
  CONTROLE_SELECIONAVEL = 76;
  CONTROLE_ROLAR_INICIATIVA = 77;
  CONTROLE_INICIAR_INICIATIVA_PARA_COMBATE = 78;
  CONTROLE_PROXIMA_INICIATIVA = 79;
  CONTROLE_APAGAR_INICIATIVAS = 82;
  CONTROLE_ROLAR_D20 = 81;
  CONTROLE_ROLAR_D100 = 116;
  CONTROLE_ROLAR_D4 = 147;
  CONTROLE_ROLAR_D6 = 148;
  CONTROLE_ROLAR_D8 = 149;
  CONTROLE_ROLAR_D10 = 150;
  CONTROLE_ROLAR_D12 = 151;
  CONTROLE_DADOS = 152;
  CONTROLE_ROLAR_PERICIA = 135;
  CONTROLE_AGARRANDO = 83;

  CONTROLE_FURTIVO = 84;
  CONTROLE_ALTERAR_FORMA = 86;
  CONTROLE_SURPRESO = 87;
  CONTROLE_ATAQUE_MAIS_1 = 90;
  CONTROLE_ATAQUE_MAIS_2 = 91;
  CONTROLE_ATAQUE_MAIS_4 = 92;
  CONTROLE_ATAQUE_MAIS_8 = 93;
  CONTROLE_ATAQUE_MAIS_16 = 136;
  CONTROLE_ATAQUE_MENOS_1 = 94;
  CONTROLE_ATAQUE_MENOS_2 = 95;
  CONTROLE_ATAQUE_MENOS_4 = 96;
  CONTROLE_ATAQUE_MENOS_8 = 97;
  CONTROLE_DANO_MAIS_1 = 98;
  CONTROLE_DANO_MAIS_2 = 99;
  CONTROLE_DANO_MAIS_4 = 100;
  CONTROLE_DANO_MAIS_8 = 101;
  CONTROLE_DANO_MAIS_16 = 102;
  CONTROLE_DANO_MAIS_32 = 103;
  CONTROLE_DANO_MENOS_1 = 104;
  CONTROLE_DANO_MENOS_2 = 105;
  CONTROLE_DANO_MENOS_4 = 106;
  CONTROLE_DANO_MENOS_8 = 107;
  CONTROLE_ILUMINACAO_MESTRE = 108;
  CONTROLE_BONUS_ATAQUE_NEGATIVO = 109;
  CONTROLE_BONUS_DANO_NEGATIVO = 110;

  CONTROLE_PAGINACAO_LISTA_LOG_CIMA = 111;
  CONTROLE_PAGINACAO_LISTA_LOG_BAIXO = 112;
  CONTROLE_PAGINACAO_LISTA_LOG_ESQUERDA = 141;
  CONTROLE_PAGINACAO_LISTA_LOG_DIREITA = 142;
  // Usado para items que nao fazem nada.
  CONTROLE_PAGINACAO_DUMMY = 113;

  CONTROLE_FALHA_20 = 114;
  CONTROLE_FALHA_50 = 115;
  CONTROLE_FALHA_NEGATIVO = 119;

  CONTROLE_BEBER_POCAO = 117;
  CONTROLE_USAR_PERGAMINHO_ARCANO = 145;
  CONTROLE_USAR_PERGAMINHO_DIVINO = 146;

  CONTROLE_MODO_ESQUIVA = 118;
  CONTROLE_FURIA = 120;
  CONTROLE_DEFESA_TOTAL = 121;
  CONTROLE_LUTA_DEFENSIVA = 122;

  CONTROLE_USAR_FEITICO_0 = 123;
  CONTROLE_USAR_FEITICO_1 = 124;
  CONTROLE_USAR_FEITICO_2 = 125;
  CONTROLE_USAR_FEITICO_3 = 126;
  CONTROLE_USAR_FEITICO_4 = 127;
  CONTROLE_USAR_FEITICO_5 = 128;
  CONTROLE_USAR_FEITICO_6 = 129;
  CONTROLE_USAR_FEITICO_7 = 130;
  CONTROLE_USAR_FEITICO_8 = 131;
  CONTROLE_USAR_FEITICO_9 = 132;
  CONTROLE_CLASSE_FEITICO_ATIVA = 133;

  CONTROLE_DESCANSAR_PERSONAGEM = 134;
  CONTROLE_INVESTIDA = 137;
  CONTROLE_MODO_MONTAR = 140;
  CONTROLE_ALTERNAR_MODELOS_DESLIGAVEIS_ENTIDADE = 143;
  CONTROLE_ALTERNAR_EM_CORPO_A_CORPO = 144;
  CONTROLE_DERRUBAR = 153;

  // Acoes devem ser consecutivas sempre.
  CONTROLE_ACAO_SINALIZACAO = 200;
  // Este deve ser o ultimo sempre.
  CONTROLE_JOGADORES = 1000;  // Lista de jogadores.
}

enum Alinhamento {
  ALINHAMENTO_CENTRO   = 1;
  ALINHAMENTO_ESQUERDA = 2;
  ALINHAMENTO_DIREITA  = 3;
  ALINHAMENTO_CIMA     = 4;
  ALINHAMENTO_BAIXO    = 5;
}

enum FormaBotao {
  FORMA_TRIANGULO = 1;
  FORMA_RETANGULO = 2;
  FORMA_DISCO     = 3;
  FORMA_NULA      = 4;  // Botoes sem forma, apenas rotulo.
}

enum TipoVisibilidade {
  // A visibilidade do botao é igual ao do id de referencia.
  VIS_IGUAL_A = 0;
  // A visibilidade do botao é inversa ao id de referencia.
  VIS_INVERSO_DE = 1;
  // Visivel apenas em camera presa.
  VIS_CAMERA_PRESA = 2;
  // Visivel apenas em primeira pessoa.
  VIS_CAMERA_PRIMEIRA_PESSOA = 3;
  // Visivel se estiver na primeira pessoa ou camera entidade selecionada.
  VIS_CAMERA_PRIMEIRA_PESSOA_OU_SELECIONADA = 4;
  // Implica VIS_PRIMEIRA_PESSOA_OU_SELECIONADA possuindo pocao.
  VIS_POCAO = 6;
  // Similar a pocao.
  VIS_PERGAMINHO_ARCANO = 23;
  VIS_PERGAMINHO_DIVINO = 24;
  // Visivel se a entidade tiver esquiva.
  VIS_ESQUIVA = 7;
  // Visivel apenas se a entidade possui furia.
  VIS_FURIA = 8;
  // Implica VIS_PRIMEIRA_PESSOA_OU_SELECIONADA possuindo ataque furtivo.
  VIS_ATAQUE_FURTIVO = 9;
  // Implica VIS_PRIMEIRA_PESSOA_OU_SELECIONADA possuindo forma alternativa.
  VIS_FORMA_ALTERNATIVA = 10;
  // Visibilidade de botoes de feitico.
  VIS_FEITICO_0 = 11;
  VIS_FEITICO_1 = 12;
  VIS_FEITICO_2 = 13;
  VIS_FEITICO_3 = 14;
  VIS_FEITICO_4 = 15;
  VIS_FEITICO_5 = 16;
  VIS_FEITICO_6 = 17;
  VIS_FEITICO_7 = 18;
  VIS_FEITICO_8 = 19;
  VIS_FEITICO_9 = 20;
  VIS_CLASSE_FEITICO_ATIVA = 21;
  VIS_ATAQUE_DERRUBAR = 25;
  // Usado para botoes que apenas carregam texturas.
  VIS_INVISIVEL = 22;
}

message Visibilidade {
  message Referencia {
    optional TipoVisibilidade tipo = 1;
    optional IdBotao id = 2;
  }
  // A operacao sera um AND das referencias.
  repeated Referencia referencia = 1;
}

message DadosBotao {
  // Tamanho do botao. Ha uma unidade ficticia que eh computada de acordo com a resolucao. O tamanho 1 ocupa
  // uma unidade, o 2 ocupa 4 (2x2). O valor em x e y eh diferente.
  optional float tamanho = 1;
  // Se tamanho nao for preenchido, esses dois devem ser. A unidade eh a mesma do tamanho (ou seja, em caracteres).
  optional float largura = 2;
  optional float altura = 3;
  // Em qual linha o botao se encontra: 0 baixo, 1 uma acima.
  optional int32 linha = 4;
  // Em qual coluna o botao se encontra.
  optional int32 coluna = 5;
  // Escrito no botao.
  optional string rotulo = 6;
  // // cor do rotulo (letra).
  optional Cor cor_rotulo = 7;
  // Cor de fundo do botao.
  optional Cor cor_fundo = 8;
  // Nome do arquivo de icone.
  optional string textura = 9;
  // Apos carregado, contem o id da textura do botao.
  optional uint32 id_textura = 20;
  // Identifica o que o botao faz, ver IdBotao.
  optional IdBotao id = 10;
  // Forma do botao. Use FORMA_NULA para botoes de label apenas.
  optional FormaBotao forma = 11;
  // Rotacao do botao.
  optional float rotacao_graus = 12;
  // Translacao do desenho em fator de escala da fonte (largura_botao * translacao_x).
  optional float translacao_x = 13;
  // Translacao do desenho em fator de escala da fonte (altura_botao * translacao_x).
  optional float translacao_y = 14;
  // Se verdadeiro, deve ser desenhado apenas durante picking. Util para evitar cliques no tabuleiro.
  optional bool picking_apenas = 15;
  // Texto mostrado quando cursor ficar sobre o botao.
  optional string dica = 16;
  // Se verdadeiro, apenas o mestre deve ver.
  optional bool mestre_apenas = 17;
  // Alinhamento do botao.
  optional Alinhamento alinhamento_horizontal = 18 [default=ALINHAMENTO_ESQUERDA];
  optional Alinhamento alinhamento_vertical = 19 [default=ALINHAMENTO_BAIXO];
  // Alguns botoes sao visiveis apenas em situacoes especificas.
  optional Visibilidade visibilidade = 21;
}

// Uma pagina contem varios botoes. As paginas servem para organizar os botoes.
message Pagina {
  repeated DadosBotao dados_botoes = 1;
}

// A barra fixa eh similar, mas nao tem paginacao, sendo sempre exibida.
message Fixo {
  repeated DadosBotao dados_botoes = 1;
}

// O controle eh composto por varias paginas.
message ControleVirtualProto {
  optional Fixo fixo = 1;
  repeated Pagina pagina = 2;
  optional int32 pagina_corrente = 3;
  optional bool modo_debug = 4;
}
