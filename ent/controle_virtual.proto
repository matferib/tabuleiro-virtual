package ent;

import "ent/entidade.proto";

enum IdBotao {
  CONTROLE_ACAO = 1;
  CONTROLE_ACAO_ANTERIOR = 2;
  CONTROLE_ACAO_PROXIMA = 3;
  CONTROLE_ADICIONA_1 = 4;
  CONTROLE_ADICIONA_5 = 5;
  CONTROLE_ADICIONA_10 = 6;
  CONTROLE_CONFIRMA_DANO = 7;
  CONTROLE_APAGA_DANO = 8;
  CONTROLE_ALTERNA_CURA = 9;
  CONTROLE_DESFAZER = 10;
  CONTROLE_VOO = 11;
  CONTROLE_VISIBILIDADE = 12;
  CONTROLE_QUEDA = 13;
  CONTROLE_LUZ = 14;
  CONTROLE_RODADA = 15;
  CONTROLE_CAMERA_ISOMETRICA = 16;
  CONTROLE_CAMERA_PRESA = 17;
  CONTROLE_CIMA = 18;
  CONTROLE_BAIXO = 19;
  CONTROLE_ESQUERDA = 20;
  CONTROLE_DIREITA = 21;
  CONTROLE_CIMA_VERTICAL = 22;
  CONTROLE_BAIXO_VERTICAL = 23;
  CONTROLE_TRANSICAO = 24;
  CONTROLE_PAGINACAO_LISTA_OBJETOS_CIMA = 25;  // paginacao de lista de objetos.
  CONTROLE_PAGINACAO_LISTA_OBJETOS_BAIXO = 26;  // ditto.
  CONTROLE_PAGINACAO_ANTERIOR = 27;  // paginacao do controle virtual
  CONTROLE_PAGINACAO_PROXIMO = 28;   // ditto.
  CONTROLE_VISAO_ESCURO = 29;
  CONTROLE_REGUA = 30;
  CONTROLE_DESENHO_LIVRE = 31;
  CONTROLE_DESENHO_RETANGULO = 32;
  CONTROLE_DESENHO_CIRCULO = 33;
  CONTROLE_DESENHO_TRIANGULO = 34;
  CONTROLE_DESENHO_ESFERA = 35;
  CONTROLE_DESENHO_PIRAMIDE = 36;
  CONTROLE_DESENHO_CUBO = 37;
  CONTROLE_DESENHO_CILINDRO = 38;
  CONTROLE_DESENHO_CONE = 39;
  CONTROLE_DESENHO_AGRUPAR = 40;
  CONTROLE_DESENHO_DESAGRUPAR  = 41;
  CONTROLE_DESENHO_COR_VERMELHO = 42;
  CONTROLE_DESENHO_COR_VERDE = 43;
  CONTROLE_DESENHO_COR_AZUL = 44;
  CONTROLE_DESENHO_COR_AMARELO = 45;
  CONTROLE_DESENHO_COR_MAGENTA = 46;
  CONTROLE_DESENHO_COR_CIANO = 47;
  CONTROLE_DESENHO_COR_BRANCO = 48;
  CONTROLE_DESENHO_COR_PRETO = 49;
  CONTROLE_COPIAR = 50;
  CONTROLE_COLAR = 51;
  CONTROLE_SALVAR = 52;
  CONTROLE_SALVAR_COMO = 53;
  CONTROLE_ABRIR = 54;
  CONTROLE_DANO_AUTOMATICO = 55;
  CONTROLE_AJUDA = 56;
  CONTROLE_MODO_ROTACAO = 57;
  CONTROLE_INTERFACE_GRAFICA = 58;
  CONTROLE_GERAR_TERRENO_ALEATORIO = 59;
  CONTROLE_MODO_TERRENO = 60;
  CONTROLE_NOP = 61;
  CONTROLE_TEXTURA_ENTIDADE = 62;
  CONTROLE_TEXTURA_ENTIDADE_PROXIMA = 63;
  CONTROLE_TEXTURA_ENTIDADE_ANTERIOR = 64;
  CONTROLE_APAGA_ENTIDADES = 65;
  CONTROLE_MODELO_ENTIDADE = 66;
  CONTROLE_MODELO_ENTIDADE_PROXIMA = 67;
  CONTROLE_MODELO_ENTIDADE_ANTERIOR = 68;

  // Acoes devem ser consecutivas sempre.
  CONTROLE_ACAO_SINALIZACAO = 100;
  CONTROLE_ULTIMA_ACAO_0 = 101;
  CONTROLE_ULTIMA_ACAO_1 = 102;
  CONTROLE_ULTIMA_ACAO_2 = 103;
  // Este deve ser o ultimo sempre.
  CONTROLE_JOGADORES = 1000;  // Lista de jogadores.
}

message DadosBotao {
  // Tamanho do botao. Ha uma unidade ficticia que eh computada de acordo com a resolucao. O tamanho 1 ocupa
  // uma unidade, o 2 ocupa 4 (2x2). O valor em x e y eh diferente.
  optional float tamanho = 1;
  // Se tamanho nao for preenchido, esses dois devem ser. A unidade eh a mesma do tamanho (ou seja, em caracteres).
  optional float largura = 2;
  optional float altura = 3;
  // Em qual linha o botao se encontra: 0 baixo, 1 uma acima.
  optional int32 linha = 4;
  // Em qual coluna o botao se encontra.
  optional int32 coluna = 5;
  // Escrita no bota, maximo dois caracteres.
  optional string rotulo = 6;
  // // cor do rotulo (letra).
  optional Cor cor_rotulo = 7;
  // Cor de fundo do botao.
  optional Cor cor_fundo = 8;
  // Nome do arquivo de icone.
  optional string textura = 9;
  // Identifica o que o botao faz, ver IdBotao.
  optional IdBotao id = 10;
  // numero de lados do botao.
  optional int32 num_lados_botao = 11;
  // Rotacao do botao.
  optional float rotacao_graus = 12;
  // Translacao do desenho em fator de escala da fonte (largura_botao * translacao_x).
  optional float translacao_x = 13;
  // Translacao do desenho em fator de escala da fonte (altura_botao * translacao_x).
  optional float translacao_y = 14;
  // Se verdadeiro, deve ser desenhado apenas durante picking. Util para evitar cliques no tabuleiro.
  optional bool picking_apenas = 15;
  // Texto mostrado quando cursor ficar sobre o botao.
  optional string dica = 16;
}

// Uma pagina contem varios botoes. As paginas servem para organizar os botoes.
message Pagina {
  repeated DadosBotao dados_botoes = 1;
}

// O controle eh composto por varias paginas.
message ControleVirtualProto {
  repeated Pagina pagina = 1;
  optional int32 pagina_corrente = 2;
}


